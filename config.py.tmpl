import os.path

import yaml


class Config(object):
    SECRET_KEY = 'super top secret key'
    DEBUG = True

    REGISTRY_API_BASE_URL = 'https://iatiregistry.org/api/3/action'
    CACHE_TIMEOUT = 86400  # 24 hours
    CURRENT_PATH = os.path.dirname(os.path.realpath(__file__))
    UPLOAD_FOLDER = os.path.join(CURRENT_PATH, 'uploads')
    ALLOWED_EXTENSIONS = set(['xml'])
    TEST_GROUPINGS = [
        {
            'name': 'IATI Rulesets',
            'description': 'These rules catch stuff that doesnâ€™t really make sense, e.g. end dates before start dates.',
            'tests_file': os.path.join(CURRENT_PATH, 'test_definitions', '202-ruleset.yaml'),
        }, {
            'name': 'Open Ag',
            'description': 'These tests only run on agricultural activities. They search for the existence of bits of data that are crucial for agricultural data to begin to be useful.',
            'tests_file': os.path.join(CURRENT_PATH, 'test_definitions', 'ag-tests.yaml'),
        }, {
            'name': 'Publish What You Fund',
            'description': 'These tests only run on current data. They comprise the automated component of the Aid Transparency Index, which aims to rank donors by data quality.',
            'tests_file': os.path.join(CURRENT_PATH, 'test_definitions', 'pwyf-tests.yaml'),
        }
    ]
    PER_PAGE = 20

    with open('codelists.yaml') as f:
        CODELISTS = yaml.load(f)
    CODELISTS['Agriculture'] = ['23070', '31110', '31120', '31130', '31140', '31150', '31161', '31162', '31163', '31164', '31165', '31166', '31181', '31182', '31191', '31192', '31193', '31194', '31195', '31210', '31220', '31261', '31281', '31282', '31291', '31310', '31320', '31381', '31382', '31391', '72040', '12240', '43040', '52010',]


    ######## Legacy command line config ########

    DIR_FOR_TESTING = UPLOAD_FOLDER

    # SUPPLY THE NAME OF THE PACKAGEGROUP (WILL LOOK FOR ALL .XML FILES BEGINNING
    # WITH THIS)
    PACKAGEGROUP_NAME = 'irishaid'
    PACKAGEGROUP_CONDITION = 'collaboration-type[@code!=2]'

    # SUPPLY THE CURRENT TEST EXPRESSION (WILL BE OUTPUT AS A COLUMN WITH PASS/FAIL)
    # CURRENT_TEST = 'activity-date[@type='end-planned']/@iso-date or activity-date[@type='end-planned']/text() or activity-date[@type='end-actual']/@iso-date or activity-date[@type='end-actual']/text() or transaction-date/@iso-date (for any transaction[transaction-type/@code='D']|transaction[transaction-type/@code='E']) is less than 13 months ago?'

    CURRENT_TEST = None

    # SUPPLY THE TEST EXPRESSION(S) AS A DICT ('expression', 'name') WITHIN A LIST
    TESTS = [{'expression': 'conditions or document-link/category[@code="A04"] exists (if activity-status/@code is at least 2 and conditions/@attached is not 0)?',
            'name': 'Conditions'}]
